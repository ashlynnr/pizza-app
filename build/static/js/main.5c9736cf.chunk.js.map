{"version":3,"sources":["images/pan-crust.webp","images/gluten-free-crust.webp","images/og-crust.webp","images/cheese-pizza.webp","images/bell-peppers.webp","images/chicken.webp","images/ham.webp","images/meatballs.webp","images/mushrooms.webp","images/pepperoni.webp","images/red-onions.webp","images/sausage.webp","images/spinach.webp","images/tomatoes.webp","components/Header.js","redux/pizza/actions.js","redux/pizza/types.js","utils/Helpers.js","components/Section.js","redux/checkout/actions.js","redux/checkout/types.js","utils/data.js","components/SideBar.js","components/Pizza.js","components/Body.js","App.js","serviceWorker.ts","redux/pizza/reducers.js","redux/pizza/index.js","redux/checkout/reducers.js","redux/checkout/index.js","redux/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Container","styled","div","_templateObject","props","theme","red","getPizza","type","formatPrice","number","Intl","NumberFormat","style","currency","format","mapDispatchToProps","adjustPrice","price","payload","connect","state","_ref","title","options","pizza","onSelect","_ref$type","_useState","useState","_useState2","Object","slicedToArray","showOptions","setShowOptions","selectHandler","e","target","checked","value","checkIngredient","option","toLowerCase","includes","Section_Container","Section_Header","onClick","OptionsContainer","map","CheckboxContainer","name","onChange","replace","str","toUpperCase","concat","Section_templateObject","white","button","_templateObject2","_templateObject3","_templateObject4","utils_data","crust","sauce","cheese","toppings","SideBar","_this","this","ingredients","crustPrice","filter","data","saucePrice","cheesePrice","toppingPrice","push","reduce","b","calculatePrice","SideBar_Container","components_Section","selectCrust","selectSauce","selectCheese","isAdded","topping","addTopping","removeTopping","PriceSection","Component","SideBar_templateObject","SideBar_templateObject2","renderIngredient","image","ingredient","Pizza_Container","Image","src","panCrust","alt","originalCrust","glutenFreeCrust","chicken","sausage","ham","meatballs","pepperoni","redOnions","mushrooms","spinach","bellPeppers","tomatoes","Pizza_templateObject","img","Pizza_templateObject2","Body","Body_Container","components_SideBar","components_Pizza","Body_templateObject","App","App_Container","Inner","components_Header","Body_Body","GlobalStyle","App_templateObject","App_templateObject2","createGlobalStyle","App_templateObject3","Boolean","window","location","hostname","match","initalState","pizzaReducer","arguments","length","undefined","action","objectSpread","toConsumableArray","initialState","checkoutReducer","rootReducer","combineReducers","checkout","createStore","history","createBrowserHistory","ReactDOM","render","es","store","styled_components_browser_esm","grey","darkGrey","gradient","react_router","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9736cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pan-crust.ee96838d.webp\";","module.exports = __webpack_public_path__ + \"static/media/gluten-free-crust.adbed319.webp\";","module.exports = __webpack_public_path__ + \"static/media/og-crust.2f163487.webp\";","module.exports = __webpack_public_path__ + \"static/media/cheese-pizza.8dce9297.webp\";","module.exports = __webpack_public_path__ + \"static/media/bell-peppers.6207c845.webp\";","module.exports = __webpack_public_path__ + \"static/media/chicken.d2557a00.webp\";","module.exports = __webpack_public_path__ + \"static/media/ham.f88f1a7a.webp\";","module.exports = __webpack_public_path__ + \"static/media/meatballs.5bd3917d.webp\";","module.exports = __webpack_public_path__ + \"static/media/mushrooms.f845b247.webp\";","module.exports = __webpack_public_path__ + \"static/media/pepperoni.0474aa17.webp\";","module.exports = __webpack_public_path__ + \"static/media/red-onions.cff4d4a6.webp\";","module.exports = __webpack_public_path__ + \"static/media/sausage.dc55c7e4.webp\";","module.exports = __webpack_public_path__ + \"static/media/spinach.9a0b0311.webp\";","module.exports = __webpack_public_path__ + \"static/media/tomatoes.efc8238e.webp\";","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Header = () => {\n  return <Container>Build a Pizza</Container>\n}\n\nexport default Header\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 40px;\n  font-weight: 800;\n  text-transform: uppercase;\n  color: ${props => props.theme.red};\n\n  @media (max-width: 1200px) {\n    grid-template-columns: auto;\n  }\n`\n","import {\n  GET_PIZZA,\n  SELECT_CRUST,\n  SELECT_SAUCE,\n  SELECT_CHEESE,\n  ADD_TOPPING,\n  REMOVE_TOPPING\n} from \"./types\";\n\nexport const getPizza = () => ({\n  type: GET_PIZZA\n});\n\nexport const selectCrust = crust => ({\n  type: SELECT_CRUST,\n  payload: crust\n});\n\nexport const selectSauce = sauce => ({\n  type: SELECT_SAUCE,\n  payload: sauce\n});\n\nexport const selectCheese = cheese => ({\n  type: SELECT_CHEESE,\n  payload: cheese\n});\n\nexport const addTopping = topping => ({\n  type: ADD_TOPPING,\n  payload: topping\n});\n\nexport const removeTopping = topping => ({\n  type: REMOVE_TOPPING,\n  payload: topping\n});\n","export const SELECT_CRUST = \"SELECT_CRUST\";\nexport const SELECT_SAUCE = \"SELECT_SAUCE\";\nexport const SELECT_CHEESE = \"SELECT_CHEESE\";\nexport const ADD_TOPPING = \"ADD_TOPPING\";\nexport const REMOVE_TOPPING = \"REMOVE_TOPPING\";\nexport const GET_PIZZA = \"GET_PIZZA\";\n","export const formatPrice = number => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n\n  return formatter.format(number);\n};\n\nexport const calculatePrice = (pizza, ingredients) => {\n  const crustPrice = ingredients.crust.filter(\n    data => data.name === pizza.crust\n  )[0].price;\n  const saucePrice = ingredients.sauce.filter(\n    data => data.name === pizza.sauce\n  )[0].price;\n  const cheesePrice = ingredients.cheese.filter(\n    data => data.name === pizza.cheese\n  )[0].price;\n  let toppingPrice = [];\n  ingredients.toppings\n    .filter(data => pizza.toppings.includes(data.name))\n    .map(data => toppingPrice.push(data.price));\n\n  return (\n    10 +\n    crustPrice +\n    saucePrice +\n    cheesePrice +\n    toppingPrice.reduce((a, b) => a + b, 0)\n  );\n};\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\"\nimport { getPizza } from \"../redux/pizza/actions\"\nimport { adjustPrice } from \"../redux/checkout/actions\"\nimport { formatPrice } from \"../utils/Helpers\"\n\nconst Section = ({ title, options, pizza, onSelect, type = \"radio\" }) => {\n  const [showOptions, setShowOptions] = useState(true)\n\n  const selectHandler = e => {\n    if (type === \"checkbox\") {\n      onSelect(e.target.checked, e.target.value)\n    } else {\n      onSelect(e.target.value)\n    }\n  }\n\n  const checkIngredient = option => {\n    return type === \"checkbox\"\n      ? pizza && pizza[title.toLowerCase()].includes(option)\n      : pizza && pizza[title.toLowerCase()] === option\n  }\n\n  return (\n    <Container>\n      <Header onClick={() => setShowOptions(!showOptions)}>\n        <h1>{title}</h1>\n      </Header>\n      {showOptions && (\n        <OptionsContainer>\n          {options.map(option => (\n            <CheckboxContainer>\n              <label>\n                <input\n                  type={type}\n                  name={title}\n                  value={option.name}\n                  checked={checkIngredient(option.name)}\n                  onChange={selectHandler}\n                />{\" \"}\n                {option.name\n                  .replace(/-/g, \" \")\n                  .replace(/(\\b[a-z](?!\\s))/g, str => str.toUpperCase())}\n                {option.price !== 0 && ` + ${formatPrice(option.price)}`}\n              </label>\n            </CheckboxContainer>\n          ))}\n        </OptionsContainer>\n      )}\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  getPizza,\n  adjustPrice\n}\n\nexport default connect(\n  state => state,\n  mapDispatchToProps\n)(Section)\n\nconst Container = styled.div`\n  background: ${props => props.theme.white};\n  margin-bottom: 20px;\n  border-radius: 5px;\n  -webkit-box-shadow: 6px 6px 15px -4px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 6px 6px 15px -4px rgba(0, 0, 0, 0.75);\n  box-shadow: 6px 6px 15px -4px rgba(0, 0, 0, 0.75);\n`\n\nconst Header = styled.button`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n  background: ${props => props.theme.red};\n  box-shadow: 0 2px 4px -4px black;\n  color: white;\n  outline: none;\n`\n\nconst OptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  padding: 20px 40px;\n\n  @media (max-width: 500px) {\n    padding: 5px;\n  }\n`\n\nconst CheckboxContainer = styled.div`\n  width: 100%;\n  margin-bottom: 10px;\n`\n","import { ADJUST_PRICE } from \"./types\";\n\nexport const adjustPrice = price => ({\n  type: ADJUST_PRICE,\n  payload: price\n});\n","export const ADJUST_PRICE = \"ADJUST_PRICE\";\n","export default {\n  crust: [\n    { name: \"pan\", price: 0 },\n    { name: \"original\", price: 0 },\n    { name: \"gluten-free\", price: 2 }\n  ],\n  sauce: [\n    { name: \"marinara\", price: 0 },\n    { name: \"alfredo\", price: 0 },\n    { name: \"none\", price: 0 }\n  ],\n  cheese: [\n    { name: \"mozzarella\", price: 0 },\n    { name: \"double-mozzarella\", price: 1 },\n    { name: \"moon-cheese\", price: 0 }\n  ],\n  toppings: [\n    { name: \"pepperoni\", price: 0.5 },\n    { name: \"italian-sausage\", price: 0.75 },\n    { name: \"meatballs\", price: 1 },\n    { name: \"grilled-chicken\", price: 1 },\n    { name: \"ham\", price: 0.75 },\n    { name: \"mushrooms\", price: 0.5 },\n    { name: \"red-onions\", price: 0.5 },\n    { name: \"spinach\", price: 0.5 },\n    { name: \"green-bell-peppers\", price: 0.75 },\n    { name: \"roma-tomatoes\", price: 0.75 }\n  ]\n};\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport Section from \"./Section\"\nimport { connect } from \"react-redux\"\nimport {\n  selectCrust,\n  selectSauce,\n  selectCheese,\n  addTopping,\n  removeTopping,\n  getPizza\n} from \"../redux/pizza/actions\"\nimport ingredients from \"../utils/data\"\nimport { calculatePrice, formatPrice } from \"../utils/Helpers\"\n\nclass SideBar extends Component {\n  render() {\n    const { pizza } = this.props\n    const price = calculatePrice(pizza, ingredients)\n    return (\n      <Container>\n        <Section\n          title=\"Crust\"\n          options={ingredients.crust}\n          onSelect={this.props.selectCrust}\n        />\n        <Section\n          title=\"Sauce\"\n          options={ingredients.sauce}\n          onSelect={this.props.selectSauce}\n        />\n        <Section\n          title=\"Cheese\"\n          options={ingredients.cheese}\n          onSelect={this.props.selectCheese}\n        />\n        <Section\n          type=\"checkbox\"\n          title=\"Toppings\"\n          options={ingredients.toppings}\n          onSelect={(isAdded, topping) => {\n            isAdded\n              ? this.props.addTopping(topping)\n              : this.props.removeTopping(topping)\n          }}\n        />\n        <PriceSection>\n          <p>Total: {formatPrice(price)}</p>\n        </PriceSection>\n      </Container>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  selectCrust,\n  selectSauce,\n  selectCheese,\n  addTopping,\n  removeTopping,\n  getPizza\n}\n\nexport default connect(\n  state => state,\n  mapDispatchToProps\n)(SideBar)\n\nconst Container = styled.div`\n  width: 100%;\n`\n\nconst PriceSection = styled.div`\n  background: ${props => props.theme.white};\n  padding: 20px 40px;\n  text-align: center;\n  font-weight: 700;\n  background: ${props => props.theme.red};\n  color: white;\n  border-radius: 5px;\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport panCrust from \"../images/pan-crust.webp\";\nimport glutenFreeCrust from \"../images/gluten-free-crust.webp\";\nimport originalCrust from \"../images/og-crust.webp\";\nimport cheese from \"../images/cheese-pizza.webp\";\nimport bellPeppers from \"../images/bell-peppers.webp\";\nimport chicken from \"../images/chicken.webp\";\nimport ham from \"../images/ham.webp\";\nimport meatballs from \"../images/meatballs.webp\";\nimport mushrooms from \"../images/mushrooms.webp\";\nimport pepperoni from \"../images/pepperoni.webp\";\nimport redOnions from \"../images/red-onions.webp\";\nimport sausage from \"../images/sausage.webp\";\nimport spinach from \"../images/spinach.webp\";\nimport tomatoes from \"../images/tomatoes.webp\";\n\nconst Pizza = props => {\n  const renderIngredient = (image, ingredient) => {\n    if (props.pizza.toppings.includes(ingredient)) {\n      return image;\n    }\n  };\n\n  return (\n    <Container>\n      {props.pizza.crust === \"pan\" && <Image src={panCrust} alt=\"\" />}\n      {props.pizza.crust === \"original\" && <Image src={originalCrust} alt=\"\" />}\n      {props.pizza.crust === \"gluten-free\" && (\n        <Image src={glutenFreeCrust} alt=\"\" />\n      )}\n      <Image src={cheese} alt=\"\" />\n      {renderIngredient(<Image src={chicken} alt=\"\" />, \"grilled-chicken\")}\n      {renderIngredient(<Image src={sausage} alt=\"\" />, \"italian-sausage\")}\n      {renderIngredient(<Image src={ham} alt=\"\" />, \"ham\")}\n      {renderIngredient(<Image src={meatballs} alt=\"\" />, \"meatballs\")}\n      {renderIngredient(<Image src={pepperoni} alt=\"\" />, \"pepperoni\")}\n      {renderIngredient(<Image src={redOnions} alt=\"\" />, \"red-onions\")}\n      {renderIngredient(<Image src={mushrooms} alt=\"\" />, \"mushrooms\")}\n      {renderIngredient(<Image src={spinach} alt=\"\" />, \"spinach\")}\n      {renderIngredient(\n        <Image src={bellPeppers} alt=\"\" />,\n        \"green-bell-peppers\"\n      )}\n      {renderIngredient(<Image src={tomatoes} alt=\"\" />, \"roma-tomatoes\")}\n    </Container>\n  );\n};\n\nexport default connect(state => state)(Pizza);\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 500px;\n`;\n","import React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport Pizza from \"./Pizza\";\nimport styled from \"styled-components\";\n\nexport default class Body extends Component {\n  render() {\n    return (\n      <Container>\n        <SideBar />\n        <Pizza />\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: auto;\n  }\n`;\n","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\n\nimport styled, { createGlobalStyle } from \"styled-components\"\n\nconst App = () => {\n  return (\n    <Container>\n      <Inner>\n        <Header />\n        <Body />\n      </Inner>\n      <GlobalStyle />\n    </Container>\n  )\n}\n\nexport default App\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`\n\nconst Inner = styled.div`\n  width: 100%;\n  max-width: 1200px;\n`\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: linear-gradient(to left bottom, #fdeded, #f0e3e3, #e3dada, #d7d0d0, #cac7c7);\n    color: #4E4646;\n    font-weight: 500;\n    padding: 100px 0;\n  }\n  p {\n    font-size: 20px;\n    margin: 0;\n  }\n  h1 {\n    font-size: 25px;\n    margin: 0;\n    \n    @media (max-width: 500px) {\n      font-size: 18px;\n    }\n  }\n  label {\n    font-size: 18px;\n\n    @media (max-width: 500px) {\n      font-size: 12px;\n    }\n  }\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_PIZZA,\n  SELECT_CRUST,\n  SELECT_SAUCE,\n  SELECT_CHEESE,\n  ADD_TOPPING,\n  REMOVE_TOPPING\n} from \"./types\";\n\nconst initalState = {\n  crust: \"pan\",\n  sauce: \"marinara\",\n  cheese: \"mozzarella\",\n  toppings: []\n};\n\nconst pizzaReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case SELECT_CRUST:\n      return {\n        ...state,\n        crust: action.payload\n      };\n    case SELECT_SAUCE:\n      return {\n        ...state,\n        sauce: action.payload\n      };\n    case SELECT_CHEESE:\n      return {\n        ...state,\n        cheese: action.payload\n      };\n    case ADD_TOPPING:\n      return {\n        ...state,\n        toppings: [...state.toppings, action.payload]\n      };\n    case REMOVE_TOPPING:\n      return {\n        ...state,\n        toppings: state.toppings.filter(topping => topping !== action.payload)\n      };\n    case GET_PIZZA:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default pizzaReducer;\n","import * as pizzaActions from \"./actions\";\nimport pizzaReducer from \"./reducers\";\n\nexport { pizzaActions };\nexport default pizzaReducer;\n","import * as types from \"./types\";\n\nconst initialState = {\n  price: 15.0\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADJUST_PRICE:\n      return {\n        ...state,\n        price: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","import * as checkoutActions from \"./actions\";\nimport checkoutReducer from \"./reducers\";\nexport { checkoutActions };\nexport default checkoutReducer;\n","import pizzaReducer from \"./pizza\";\nimport checkoutReducer from \"./checkout\";\nimport { createStore, combineReducers } from \"redux\";\n\n// console.log(pizzaReducer, checkoutReducer);\nconst rootReducer = combineReducers({\n  pizza: pizzaReducer,\n  checkout: checkoutReducer\n});\n\nexport default createStore(rootReducer, {});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/index\";\n\nconst theme = {\n  red: \"#EE4042\",\n  white: \"#FDEDED\",\n  grey: \"#CAC7C7\",\n  darkGrey: \"#4E4646\",\n  gradient:\n    \"linear-gradient(to left bottom, #fdeded, #f0e3e3, #e3dada, #d7d0d0, #cac7c7);\"\n};\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}