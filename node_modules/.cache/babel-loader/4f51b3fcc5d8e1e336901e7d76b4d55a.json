{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ashlynn/Projects/pizza-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/ashlynn/Projects/pizza-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashlynn/Projects/pizza-app/src/components/Section.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  justify-items: center;\\n  padding: 20px 40px;\\n\\n  @media (max-width: 500px) {\\n    padding: 5px;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 10px;\\n  text-align: center;\\n  background: \", \";\\n  box-shadow: 0 2px 4px -4px black;\\n  color: white;\\n  outline: none;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  margin-bottom: 20px;\\n  border-radius: 5px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getPizza } from \"../redux/pizza/actions\";\nimport { adjustPrice } from \"../redux/checkout/actions\";\nimport { formatPrice } from \"../utils/Helpers\";\n\nconst Section = ({\n  title,\n  options,\n  pizza,\n  onSelect,\n  type = \"radio\"\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        showOptions = _useState2[0],\n        setShowOptions = _useState2[1];\n\n  const selectHandler = e => {\n    if (type === \"checkbox\") {\n      onSelect(e.target.checked, e.target.value);\n    } else {\n      onSelect(e.target.value);\n    }\n  };\n\n  const checkIngredient = option => {\n    return type === \"checkbox\" ? pizza && pizza[title.toLowerCase()].includes(option) : pizza && pizza[title.toLowerCase()] === option;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Header, {\n    onClick: () => setShowOptions(!showOptions),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title)), showOptions && React.createElement(OptionsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, options.map(option => React.createElement(CheckboxContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: type,\n    name: title,\n    value: option.name,\n    checked: checkIngredient(option.name),\n    onChange: selectHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" \", option.name.replace(/-/g, \" \").replace(/(\\b[a-z](?!\\s))/g, str => str.toUpperCase()), option.price !== 0 && \" + \".concat(formatPrice(option.price)))))));\n};\n\nconst mapDispatchToProps = {\n  getPizza,\n  adjustPrice\n};\nexport default connect(state => state, mapDispatchToProps)(Section);\nconst Container = styled.div(_templateObject(), props => props.theme.white);\nconst Header = styled.button(_templateObject2(), props => props.theme.red);\nconst OptionsContainer = styled.div(_templateObject3());\nconst CheckboxContainer = styled.div(_templateObject4());","map":{"version":3,"sources":["/Users/ashlynn/Projects/pizza-app/src/components/Section.js"],"names":["React","useState","styled","connect","getPizza","adjustPrice","formatPrice","Section","title","options","pizza","onSelect","type","showOptions","setShowOptions","selectHandler","e","target","checked","value","checkIngredient","option","toLowerCase","includes","map","name","replace","str","toUpperCase","price","mapDispatchToProps","state","Container","div","props","theme","white","Header","button","red","OptionsContainer","CheckboxContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getPizza } from \"../redux/pizza/actions\";\nimport { adjustPrice } from \"../redux/checkout/actions\";\nimport { formatPrice } from \"../utils/Helpers\";\n\nconst Section = ({ title, options, pizza, onSelect, type = \"radio\" }) => {\n  const [showOptions, setShowOptions] = useState(true);\n\n  const selectHandler = e => {\n    if (type === \"checkbox\") {\n      onSelect(e.target.checked, e.target.value);\n    } else {\n      onSelect(e.target.value);\n    }\n  };\n\n  const checkIngredient = option => {\n    return type === \"checkbox\"\n      ? pizza && pizza[title.toLowerCase()].includes(option)\n      : pizza && pizza[title.toLowerCase()] === option;\n  };\n\n  return (\n    <Container>\n      <Header onClick={() => setShowOptions(!showOptions)}>\n        <h1>{title}</h1>\n      </Header>\n      {showOptions && (\n        <OptionsContainer>\n          {options.map(option => (\n            <CheckboxContainer>\n              <label>\n                <input\n                  type={type}\n                  name={title}\n                  value={option.name}\n                  checked={checkIngredient(option.name)}\n                  onChange={selectHandler}\n                />{\" \"}\n                {option.name\n                  .replace(/-/g, \" \")\n                  .replace(/(\\b[a-z](?!\\s))/g, str => str.toUpperCase())}\n                {option.price !== 0 && ` + ${formatPrice(option.price)}`}\n              </label>\n            </CheckboxContainer>\n          ))}\n        </OptionsContainer>\n      )}\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  getPizza,\n  adjustPrice\n};\n\nexport default connect(\n  state => state,\n  mapDispatchToProps\n)(Section);\n\nconst Container = styled.div`\n  background: ${props => props.theme.white};\n  margin-bottom: 20px;\n  border-radius: 5px;\n`;\n\nconst Header = styled.button`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n  background: ${props => props.theme.red};\n  box-shadow: 0 2px 4px -4px black;\n  color: white;\n  outline: none;\n`;\n\nconst OptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  padding: 20px 40px;\n\n  @media (max-width: 500px) {\n    padding: 5px;\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  width: 100%;\n  margin-bottom: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}